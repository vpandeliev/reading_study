# This file was generated by study_builder.views_builder.py

from django.http import *
from django.contrib.auth.decorators import login_required
from django.template import Template, Context, RequestContext
from django.contrib.auth.models import User
from studies.models import Study, Group, Stage, StageGroup, StudyParticipant, UserStage
from users.models import UserRoles
from django.shortcuts import render_to_response
from django.core.urlresolvers import reverse


@login_required
def aim_consent(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/aim/stages/consent/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="aiming_test_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def aim_instructions(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/aim/stages/instructions/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="aiming_test_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def aim_aiming_task(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/aim/stages/aiming_task/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="aiming_test_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def aim_continuation(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/aim/stages/continuation/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="aiming_test_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def st2_welcome_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/st2/stages/welcome_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="another_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def st2_simple_task(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/st2/stages/simple_task/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="another_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def st2_bye_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/st2/stages/bye_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="another_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def exs_welcome_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/exs/stages/welcome_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="example_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def exs_simple_task(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/exs/stages/simple_task/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="example_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def exs_bye_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/exs/stages/bye_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="example_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def exs_welcome_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/exs/stages/welcome_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="example_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def exs_simple_task(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/exs/stages/simple_task/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="example_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def exs_bye_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/exs/stages/bye_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="example_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def java_check_java_check(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/java_check/stages/java_check/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="java_check_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def reading_study_welcome_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/reading_study/stages/welcome_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="Technology Integration Practices in Academic Readers")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def reading_study_simple_task(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/reading_study/stages/simple_task/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="Technology Integration Practices in Academic Readers")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def reading_study_bye_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/reading_study/stages/bye_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="Technology Integration Practices in Academic Readers")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def rmq_injury_prevention(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/rmq/stages/injury_prevention/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="rural_medicine_questionairre")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def rmq_housing(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/rmq/stages/housing/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="rural_medicine_questionairre")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def rmq_results(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/rmq/stages/results/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="rural_medicine_questionairre")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def shi_welcome_page(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/shi/stages/welcome_page/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="shipley_vocabulary_test")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def shi_test(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/shi/stages/test/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="shipley_vocabulary_test")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def bog_boggle(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/bog/stages/boggle/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="simple_word_game_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def bog_shipley(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/bog/stages/shipley/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="simple_word_game_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def bog_consent(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/bog/stages/consent/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="simple_word_game_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def space_fortress_java_check(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/space_fortress/stages/java_check/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="space_fortress_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))


@login_required
def space_fortress_space_fortress(request):

    template_file = open("/Volumes/Macintosh HD/Users/velian/Dropbox/Tangra/portal/user_studies/space_fortress/stages/space_fortress/template.html", "r")
    template = Template("".join(template_file.readlines()))

    context = RequestContext(request)
    
    #get study:
    current_stage = None
    study = Study.objects.get(name="space_fortress_study")
    active_stages = UserStage.objects.filter(user=request.user, status=1)
    for s in active_stages:
        if s.stage.study == study:
            current_stage = s
    
    context["current_stage"] = current_stage
    
    return HttpResponse(template.render(context))

